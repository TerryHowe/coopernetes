---
- name: Create kubernetes config directory
  file:
    path: "{{ lookup('env', 'HOME') }}/.kube"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0755
    state: directory
  delegate_to: localhost

- name: Fetch the config from the pi
  fetch:
    src: "/home/pi/.kube/config"
    dest: "{{ lookup('env', 'HOME') }}/.kube/{{ hostname }}"
    flat: True
  register: host_config

- name: Set kube config permissions
  file:
    path: "{{ lookup('env', 'HOME') }}/.kube/{{ hostname }}"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0600
  delegate_to: localhost

- name: Merge config files if needed
  block:
    - name: Delete old context if it exists
      command: kubectl config delete-context "{{ hostname }}"
      failed_when: False
      delegate_to: localhost

    - name: Merge config files
      command: bash -c "KUBECONFIG={{ lookup('env', 'HOME') }}/.kube/config:{{ lookup('env', 'HOME') }}/.kube/{{ hostname }} kubectl config view --flatten > {{ lookup('env', 'HOME') }}/.kube/newconfig"
      delegate_to: localhost

    - name: Rename context
      command: kubectl config rename-context --kubeconfig "{{ lookup('env', 'HOME') }}/.kube/newconfig" kubernetes-admin@kubernetes "{{ hostname }}"
      delegate_to: localhost

    - name: Set host as current context
      command: kubectl config set-context --kubeconfig "{{ lookup('env', 'HOME') }}/.kube/newconfig" "{{ hostname }}"
      delegate_to: localhost

    - name: Activate new config
      copy:
        src: "{{ lookup('env', 'HOME') }}/.kube/newconfig"
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        owner: "{{ lookup('env', 'USER') }}"
        mode: 0600
      delegate_to: localhost
  when: host_config.changed == True
